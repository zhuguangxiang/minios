/**INC+************************************************************************/
/* Header:  hsr.h                                                             */
/*                                                                            */
/* Purpose: High Service Routine used by interrupt                            */
/*          MiniOS supports ISR(diable irq) and HSR(enable irq)               */
/*                                                                            */
/* Author:  ZhuGuangXiang                                                     */
/*                                                                            */
/* Version: V1.00                                                             */
/*                                                                            */
/* (C) Copyright 2014-2024 ZhuGuangXiang NanJing China                        */
/*                                                                            */
/**INC-************************************************************************/

#ifndef _MINIOS_HSR_H_
#define _MINIOS_HSR_H_

#include "common/types.h"
#include "common/list.h"

/**STRUCT+*********************************************************************/
/* Structure: HSR                                                             */
/*                                                                            */
/* Description: High Service Routine(HSR is based on priority)                */
/**STRUCT-*********************************************************************/
typedef VOID (*HSR_FUNC)(VOID *);
typedef struct {
    /**************************************************************************/
    /* hsr running node                                                       */
    /**************************************************************************/
    LQE node;

    /**************************************************************************/
    /* hsr callback                                                           */
    /**************************************************************************/
    HSR_FUNC func;

    /**************************************************************************/
    /* hsr user data                                                          */
    /**************************************************************************/
    VOID *data;

    /**************************************************************************/
    /* hsr activiated count                                                   */
    /**************************************************************************/
    INT count;

    /**************************************************************************/
    /* hsr priority                                                           */
    /**************************************************************************/
    BYTE priority;

    /**************************************************************************/
    /* hsr description                                                        */
    /**************************************************************************/
    CHAR *desc;
} HSR;

/******************************************************************************/
/* Macro to declare a HSR                                                     */
/******************************************************************************/
#define HSR_INIT(name, prio, func, desc) \
    {LIST_INIT((name).node), func, NULL, 0, prio, desc}

/**API+************************************************************************/

VOID handle_pending_hsrs(VOID);
VOID activiate_hsr(HSR *hsr, VOID *data);

/**API-************************************************************************/

#endif /* _MINIOS_HSR_H_ */

/******************************************************************************/
// EOF hsr.h
